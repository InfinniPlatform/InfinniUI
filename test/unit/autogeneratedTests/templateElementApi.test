// path: ${path}
// filename: ${filename}
describe('${capitalizedName}_ElementApiTest', function() {

    describe('${amdPath}', function() {

        it('Should setting and getting text', function () {
            // Given
            var ${name} = new ${capitalizedName}();
            ${name}.setText('text');
            assert.equal('text',${name}.getText());
        });

        it('Should setting and getting name', function () {
            // Given
            var ${name} = new ${capitalizedName}();
            ${name}.setName('name');
            assert.equal('name',${name}.getName());
        });

        it('Should has getView method', function () {
            // Given
            var ${name} = new ${capitalizedName}();

            assert.isTrue(${name}.getView !== undefined);
        });

        it('Should setting and getting enabled flag', function () {
            // Given
            var ${name} = new ${capitalizedName}();
            debugger
            assert.isTrue(${name}.getEnabled());
            ${name}.setEnabled(false);
            assert.isFalse(${name}.getEnabled());
        });

        it('Should setting and getting visible flag', function () {
            // Given
            var ${name} = new ${capitalizedName}();

            assert.isTrue(${name}.getVisible());
            ${name}.setVisible(false);
            assert.isFalse(${name}.getVisible());
        });

        it('Should has render method', function () {
            // Given
            var ${name} = new ${capitalizedName}();

            assert.isTrue(${name}.render !== undefined);
        });

        function testAlignment(element, alignment, cssClass){
            if(!element.setHorizontalAlignment) return false;

            element.setHorizontalAlignment(alignment);

            if(alignment!== element.getHorizontalAlignment()) return false;
            if(!element.render().hasClass(cssClass)) return false;

            return true;
        }

        it('Should setting and getting horizontal alignment', function () {
            // Given
            var ${name} = new ${capitalizedName}();
            var self = this;

            assert.isTrue(testAlignment(${name}, 'Left', 'pull-left'));
            assert.isTrue(testAlignment(${name}, 'Right', 'pull-right'));
            assert.isTrue(testAlignment(${name}, 'Center', 'center-block'));
        });

        it('Should have onLoaded handler', function () {
            // Given
            var ${name} = new ${capitalizedName}(),
                onLoadFlag = 0,
                onValueChanged = 0;

            ${name}.onLoaded(function(){
                onLoadFlag++;
            });

            assert.equal(onLoadFlag, 0);

            // When
            ${name}.render();

            // Then
            assert.equal(onLoadFlag, 1);
        });
    });
});